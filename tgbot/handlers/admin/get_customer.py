from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup

from tgbot.services.repository import Repo


async def get_customer(m: Message, repo: Repo):
    args = m.get_args()
    if len(args) > 0:
        try:
            requestor_data = await repo.get_manager(userid=m.chat.id) # @TODO —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –≤–∏–¥–µ —Ä–µ–∫–≤–µ—Å—Ç–µ—Ä–∞
            customer_data = await repo.get_customer(serial_id=int(args))
            if requestor_data['city'] != customer_data['city']:
                await m.answer(text="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑—á–∏–∫–∞—Ö –∏–∑ –¥—Ä—É–≥–∏—Ö –≥–æ—Ä–æ–¥–æ–≤.")
                return
            answer_message = f"""<b>üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑—á–∏–∫–µ ‚Ññ{customer_data["id"]}</b>

–§–ò–û: {customer_data['name']}
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {customer_data['number']}

üì¶ –ó–∞–∫–∞–∑–æ–≤ –≤–∑—è—Ç–æ: {len(await repo.get_couriers_orders(userid=int(args)))}"""
            await m.reply(text=answer_message, reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[[InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–∫–∞–∑—á–∏–∫—É",
                                                       url=f"tg://user?id={customer_data['userid']}")]]
            ))
        except TypeError:
            await m.reply("<b>üîé –ó–∞–∫–∞–∑—á–∏–∫–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.</b>")
    else:
        answer_message = """–í–≤–æ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:
<code>/–∑–∞–∫–∞–∑—á–∏–∫ 41</code>
–≥–¥–µ 41 - –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑—á–∏–∫–∞."""
        await m.reply(text=answer_message)
