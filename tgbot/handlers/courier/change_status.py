from aiogram.dispatcher import FSMContext
from aiogram.types import Message

from tgbot.handlers.courier.personal_profile import personal_profile
from tgbot.keyboards.default.courier.change_status import change_status_kb
from tgbot.services.repository import Repo
from tgbot.states.courier.change_status import ChangeStatus


async def ask_for_status(m: Message):
    await m.reply(text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
                  reply_markup=change_status_kb)
    await ChangeStatus.first()


async def set_new_status(m: Message, repo: Repo, state: FSMContext):
    if m.text == "üõµ –°–≤–æ–±–æ–¥–µ–Ω":
        await repo.set_courier_status(courier_id=m.chat.id, status="–°–≤–æ–±–æ–¥–µ–Ω")
        await state.finish()
        await personal_profile(m=m, repo=repo)
    elif m.text == "üõµ‚ùóÔ∏è –ó–∞–Ω—è—Ç":
        await repo.set_courier_status(courier_id=m.chat.id, status="–ó–∞–Ω—è—Ç")
        await state.finish()
        await personal_profile(m=m, repo=repo)
    elif m.text == "üì¶ –ù–∞ –∑–∞–∫–∞–∑–µ":
        await repo.set_courier_status(courier_id=m.chat.id, status="–ù–∞ –∑–∞–∫–∞–∑–µ")
        await state.finish()
        await personal_profile(m=m, repo=repo)
    elif m.text == "‚úñÔ∏è –û—Ç–º–µ–Ω–∞":
        await state.finish()
        await personal_profile(m=m, repo=repo)
