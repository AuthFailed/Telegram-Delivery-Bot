from aiogram import Dispatcher, types

from tgbot.handlers.customer.change_customer__data import change_user_data, user_choice, new_info
from tgbot.handlers.customer.delete_profile import delete_profile, delete_profile_yes, delete_profile_no
from tgbot.handlers.customer.order import order_starts, order_all_info, order_time, order_other_details, \
    order_user_choice, order_date
from tgbot.handlers.customer.orders_interaction import list_of_available_orders, get_order_info
from tgbot.handlers.customer.our_services import our_services
from tgbot.handlers.customer.personal_profile import personal_profile
from tgbot.handlers.customer.price_map import price_map
from tgbot.handlers.customer.registration import *
from tgbot.handlers.customer.start import *
from tgbot.handlers.customer.tech_support import *
from tgbot.keyboards.inline.customer.callback_data import calendar_callback
from tgbot.keyboards.inline.customer.callback_data import choose_order
from tgbot.models.role import UserRole
from tgbot.states.user.change_user_info import ChangeUserInfo
from tgbot.states.user.delete_profile import DeleteProfile
from tgbot.states.user.order import Order


def register_customer(dp: Dispatcher):
    # start
    dp.register_message_handler(user_start, commands=["start", "menu"], state="*", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(user_start, text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", state="*", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)

    # reg user
    dp.register_message_handler(reg_starts, text="‚úçÔ∏è –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(reg_user_type, content_types=['text'], state=RegistrationUser.user_type,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(reg_user_name, content_types=['text'], state=RegistrationUser.name,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(reg_user_address, content_types=['text'], state=RegistrationUser.address,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(reg_user_number, content_types=['text'], state=RegistrationUser.number,
                                chat_type=types.ChatType.PRIVATE)

    # new order
    dp.register_message_handler(order_starts, text="üö© –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(order_all_info, state=Order.all_info, role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_callback_query_handler(order_date, calendar_callback.filter(), state=Order.order_date,
                                       role=UserRole.USER,
                                       chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(order_time, state=Order.order_time, role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(order_other_details, state=Order.other_details, role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(order_user_choice, state=Order.user_choice, role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)

    # user orders

    # personal profile
    dp.register_message_handler(personal_profile, text="üë®‚Äçüíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(list_of_available_orders, text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", role=UserRole.USER)
    dp.register_callback_query_handler(get_order_info, choose_order.filter())
    dp.register_message_handler(change_user_data, text="üìã –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(delete_profile, text="üî® –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(delete_profile_yes, text="‚úÖ –î–∞, —è —É–≤–µ—Ä–µ–Ω(–∞)", state=DeleteProfile.user_choice,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(delete_profile_no, text="‚úñÔ∏è –ù–µ—Ç, —è –ø–µ—Ä–µ–¥—É–º–∞–ª(–∞)", state=DeleteProfile.user_choice,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(user_choice, state=ChangeUserInfo.user_choice, role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
    dp.register_message_handler(new_info, state=ChangeUserInfo.new_info, role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)

    # price map
    dp.register_message_handler(price_map, text="üó∫Ô∏è –ö–∞—Ä—Ç–∞ —Ü–µ–Ω –∑–∞ –¥–æ—Å—Ç–∞–≤–∫—É", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)

    # technical support
    dp.register_message_handler(tech_support, text="üôã –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)

    # our services
    dp.register_message_handler(our_services, text="üöÄ –ù–∞—à–∏ —É—Å–ª—É–≥–∏", role=UserRole.USER,
                                chat_type=types.ChatType.PRIVATE)
