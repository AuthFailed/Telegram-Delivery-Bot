from datetime import datetime

from aiogram.types import Message

from tgbot.config import load_config
from tgbot.services.repository import Repo

config = load_config("bot.ini")
events_chat = config.tg_bot.events_group
now = datetime.now()


# customers
async def new_customer(m: Message, customer_data, customer_id: int):
    event_message = f"""<b>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∞–∫–∫–∞—É–Ω—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞ ‚Ññ{customer_id}</b>

<b>üë®‚Äçüíª –î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞:</b>
–¢–∏–ø: <code>{customer_data['type']}</code>
–õ–∏—Ü–æ: <code>{customer_data['name']}</code>
–ê–¥—Ä–µ—Å: <code>{customer_data['address']}</code>
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {customer_data['number']}

<i>–î–∞—Ç–∞: {now.hour}:{now.minute} {now.day}.{now.month}.{now.year}</i>"""

    await m.bot.send_message(chat_id=events_chat,
                             text=event_message)


async def customer_changed_profile_data(m: Message, customer_id: int, customer_state_data, repo: Repo):
    customer_db_data = await repo.get_customer(user_id=customer_id)
    if customer_state_data['choice'] == "name":
        changed_type = "–õ–∏—Ü–æ"
    elif customer_state_data['choice'] == "address":
        changed_type = "–ê–¥—Ä–µ—Å"
    else:
        changed_type = "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    event_message = f"""<b>–ó–∞–∫–∞–∑—á–∏–∫ ‚Ññ{customer_db_data['id']} —Å–º–µ–Ω–∏–ª –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</b>

–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö: {changed_type}
–ò–∑–º–µ–Ω–µ–Ω–∏–µ: 
<b>{customer_db_data[customer_state_data['choice']]}</b> ‚Üí <b>{customer_state_data['new_info']}</b>

<i>–î–∞—Ç–∞: {now.hour}:{now.minute} {now.day}.{now.month}.{now.year}</i>"""

    await m.bot.send_message(chat_id=events_chat,
                             text=event_message)


async def customer_delete_profile(m: Message, customer_data):
    event_message = f"""<b>–ó–∞–∫–∞–∑—á–∏–∫ ‚Ññ{customer_data['id']} —É–¥–∞–ª–µ–Ω.</b>

<b>üë®‚Äçüíª –î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞:</b>
–õ–∏—Ü–æ: <i>{customer_data['name']}</i>
–ê–¥—Ä–µ—Å: <i>{customer_data['address']}</i>
–ù–æ–º–µ—Ä: {customer_data['number']}

<i>–î–∞—Ç–∞: {now.hour}:{now.minute} {now.day}.{now.month}.{now.year}</i>"""

    await m.bot.send_message(chat_id=events_chat,
                             text=event_message)


# courier
async def new_courier(m: Message, courier_data):
    event_message = f"""<b>–ö—É—Ä—å–µ—Ä ‚Ññ{courier_data['id']} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω</b>

<b>üë®‚Äçüíª –î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞:</b>
–ò–º—è: {courier_data['name']}
–ì–æ—Ä–æ–¥: {courier_data['city']}
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {courier_data['number']}

<i>–î–∞—Ç–∞: {now.hour}:{now.minute} {now.day}.{now.month}.{now.year}</i>"""

    await m.bot.send_message(chat_id=events_chat,
                             text=event_message)


async def courier_delete_profile(m: Message, courier_data):
    event_message = f"""<b>–ö—É—Ä—å–µ—Ä ‚Ññ{courier_data['id']} —É–¥–∞–ª–µ–Ω.</b>"""

    await m.bot.send_message(chat_id=events_chat,
                             text=event_message)
