from aiogram.dispatcher import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove

from tgbot.handlers.admin.manage_bot import manage_bot
from tgbot.handlers.admin.start import start
from tgbot.keyboards.default.admin.check_partner import check_partner
from tgbot.keyboards.default.admin.return_to_menu import return_to_menu
from tgbot.services import Repo
from tgbot.states.admin.new_partner import NewPartner


async def add_partner(m: Message, repo: Repo):
    admin_info = await repo.get_partner(admin_id=m.chat.id)
    if admin_info['ismain']:
        await m.answer(text="üèôÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞-–ø–∞—Ä—Ç–Ω–µ—Ä–∞:",
                       reply_markup=return_to_menu)
        await NewPartner.first()
    else:
        await m.answer(text="–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É <b>–≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>!")


async def partner_city(m: Message, repo: Repo, state: FSMContext):
    is_city_exists = await repo.is_partner_exists(city=m.text.lower())
    if is_city_exists:
        await m.answer(text="üö´ –ü–∞—Ä—Ç–Ω–µ—Ä —Å —Ç–∞–∫–∏–º –≥–æ—Ä–æ–¥–æ–º <b>—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b> –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n"
                            "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏ –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")
        await state.finish()
        await manage_bot(m, repo)
        return
    await state.update_data(city=m.text.lower())
    await m.answer(text="üëë –í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
                   reply_markup=return_to_menu)

    await NewPartner.next()


async def partner_id(m: Message, repo: Repo, state: FSMContext):
    if m.text.isdigit():
        is_partner_exists = await repo.is_partner_exists(partner_id=int(m.text))
        if is_partner_exists:
            await m.answer(text="üö´ –ü–∞—Ä—Ç–Ω–µ—Ä —Å —Ç–∞–∫–∏–º ID <b>—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b> –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n"
                                "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏ –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")
            await state.finish()
            await manage_bot(m, repo)
            return
        await state.update_data(admin_id=m.text)
        partner_data = await state.get_data()
        await m.answer(text=f"""–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
üëë ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: <b>{partner_data['admin_id']}</b>
üèô –ì–æ—Ä–æ–¥: <b>{partner_data['city'].title()}</b>
    """,
                       reply_markup=check_partner)
        await NewPartner.next()
    else:
        await m.answer(text="üö´ <b>–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID</b>")


async def partner_choice(m: Message, repo: Repo, state: FSMContext):
    if m.text == "üëå –í—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ":
        partner_data = await state.get_data()
        await repo.add_partner(partner_id=partner_data['admin_id'],
                               city=partner_data['city'])
        await state.finish()
        await m.answer(text=f"""–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞!
–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ - <b>{partner_data['city'].title()}</b>.
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–∑–Ω–∞—á–µ–Ω ID <b>{partner_data['admin_id']}</b>.
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä—É (<a href="https://t.me/dostavka30rus_bot">—Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞</a>) –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ.""",
                       reply_markup=ReplyKeyboardRemove())
        await manage_bot(m, repo)
    elif m.text == "üîÑ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ":
        await state.finish()
        await m.answer(text="üèôÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞-–ø–∞—Ä—Ç–Ω–µ—Ä–∞:", reply_markup=return_to_menu)
        await NewPartner.first()

    elif m.text == "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        await start(m=m)
